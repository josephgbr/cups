#!/bin/bash
#
#   gen_diff - compare source<->translated tmpl files, and store in a text file
#   Copyright (C) 2016 Rafael Fontenelle
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

###########################################
# Define initial values of some variables

initialdir=`pwd` # store initial directory before any `cd`
verbose=0  # set initial verbose value

###########################################
# Define some required functions

help() {
    cat <<EOF
Usage: $(basename $0) [options]
Diff source and translated tmpl files from CUPS, and store in a text file.
Options:
   -i <inputdir>    CUPS source code directory containing both source
                      and translated templates. (default: current dir)
   -o <outputfile>  tarball name to setor the translation files.
                      (default: review.txt)
   -l <locale>      set locale with a language code, like e.g. pt_BR.
                      (default: value of \$LANG environment variable)
   -v               enable verbosity, display more information.
   -h               show help and quit.

Report bugs in: https://github.com/rffontenelle/cups-pt_BR"
EOF
    exit 2
}

die() {
    echo "Error: $1" > /dev/stderr
    cd "$initialdir"
    exit 1
}

verbose() {
    [[ $verbose -eq 1 ]] && echo "Verbose: $1" 2>&1 
}

###########################################
# Check provided options, values, directory/file contents (if any)

while getopts 'i|o|l|v|h' OPTION; do
    case $OPTION in
        i)  [ ! -z "$OPTARG" ] || die "option -i requires a directory an argument."
            [ -d "$OPTARG" ]   || die "unable to find directory containing translated files."
            inputdir="$OPTARG"
        ;;
        o)  [ ! -z "$OPTARG" ] || die "option -o requires a filename as an argument."
            outputfile="$OPTARG"
        ;;
        l)  [ ! -z "$OPTARG" ] || die "option -l requires a language code as an argument."
            locale=$OPTARGS
        ;;
        v)  verbose=1
        ;;
        h)  help
        ;;
        *)  echo "unknown option \"$OPTION\""
            help
        ;;
    esac
done
shift $(($OPTIND - 1))

# if locale not set, use system's locale
if [ -z $locale ]; then
   locale=${LANG/.*/}
   [ ! $locale == C ] || die "unable to get locale as it was not provided and \$LANG value is C."
   verbose "getting locale from \$LANG."
fi
verbose "using locale $locale."

# name of file that will store the comparison result of tmpl files
# p.s.: will be stored in templates folder!
# use default, if not done already
[ -z "$outputfile" ] && outputfile="review.txt"
verbose "using outputfile $outputfile."

# set inputdir to current dir, if not provided as command=line argument
inputdir=${inputdir:-$(pwd)}

cd "$inputdir"

# Make sure what is the current work dir and where are the '.tmpl' files'.
case $(basename $(pwd)) in
   cups-?.?.?)  srctmpldir="templates" ;;   # for 3-digit versions e.g. 2.1.2
   cups-?.?)    srctmpldir="templates" ;;   # for 2-digit versions e.g. 2.2
   templates)   srctmpldir="." ;;
   $locale)     srctmpldir=".." ;;
   *)           die "unable to find templates/ folder inside inputdir \"$inputdir\"." ;;
esac

# Get list of template files and bail out if there is none.
tmpllist="$(ls $srctmpldir/*.tmpl)"
[ -z "$tmpllist" ] || die "unable to find templates inside the templates/ folder."


# Set dsttmpldir with the template translation folder and check it out
dsttmpldir=$srctmpldir/$locale
[ ! -d $dsttmpldir ] || die "Unable to find template translation folder $dsttmpldir."
[ ! $(find $dsttmpldir -maxdepth 0 -empty) == $dsttmpldir ] || \
    die "template translation folder $dsttmpldir is empty. No reason to go further."


# Set output file to templates/ and verify if it can be created.
outputfile="$srctmpldir/$outputfile"
rm "$outputfile"
touch "$outputfile"
[ $? -eq 0 ] || die "output file $outputfile is not writable."


failedfiles=
echo "Comparison of Templates generated by gen_diff.sh in $(date)" >> $outputfile
for tmplfile in $tmpllist; do
    if ! [[ -e $dsttmpldir/$(basename $tmplfile) ]]; then
        failedfiles="$failedfiles $(basename $tmplfile)" # store failed
    else
        echo -e "\n=========================================\n" >> $outputfile
        echo -e "$tmplfile\n\n" >> $outputfile
        diff -Naur $tmplfile $dsttmpldir/$(basename $tmplfile) >> $outputfile
        echo -e "\n" >> $outputfile
    fi
done

# Show which tmpl comparison failed, if any
[ -n $failedfiles ] && \
    echo "The following files doesn't exist in template translation folder, so comparison failed for them:"
    echo $failedfiles
fi
